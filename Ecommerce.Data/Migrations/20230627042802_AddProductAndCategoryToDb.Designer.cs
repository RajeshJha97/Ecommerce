// <auto-generated />
using System;
using Ecommerce.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230627042802_AddProductAndCategoryToDb")]
    partial class AddProductAndCategoryToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6677),
                            Description = "Test Category Description",
                            Name = "Test Category",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6678),
                            Description = "Dummy Category Description",
                            Name = "Dummy Category",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cffcebb-c9cd-4036-a3ab-66d0dcffebed"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6546),
                            Description = "Test Description",
                            Name = "Test Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c57cd240-b7c3-4126-b763-bda4f85b7c02"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6574),
                            Description = "Dummy Description",
                            Name = "Dummy Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("29fcd54e-965e-432d-a761-168ba6d80f20"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6576),
                            Description = "Dummy1 Description",
                            Name = "Dummy1 Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d54e85d2-6b44-4d3e-9aef-e239ac80ea40"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6577),
                            Description = "Dummy4 Description",
                            Name = "Dummy4 Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("92e75459-35ac-4078-aff7-18e728953718"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6579),
                            Description = "Dummy5 Description",
                            Name = "Dummy5 Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("048234ff-e015-4087-92d5-3ae2a00f7a08"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 6, 27, 9, 58, 2, 95, DateTimeKind.Local).AddTicks(6580),
                            Description = "Dummy6 Description",
                            Name = "Dummy6 Name",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.Models.Product", b =>
                {
                    b.HasOne("Ecommerce.Models.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Models.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
